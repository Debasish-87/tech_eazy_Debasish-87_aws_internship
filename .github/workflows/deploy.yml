name: Deploy Java App to EC2

on:
  push:
    branches:
      - feature/devops-assignment-3  
    tags:
      - 'v*'

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ap-south-1
      TF_VAR_aws_region: ap-south-1
      TF_VAR_logs_bucket_name: techeazy-dev-logs-debasish-87
      TF_VAR_project_name: techeazy-devops
      TF_VAR_environment: dev
      STAGE: dev

    steps:
      - name: ‚è¨ Checkout Code
        uses: actions/checkout@v3

      - name: üîê Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: ‚öôÔ∏è Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: üöÄ Terraform Init
        run: terraform init

      - name: üì¶ Terraform Plan
        run: terraform plan -var-file="dev_config.tfvars"

      - name: ‚úÖ Terraform Apply
        run: terraform apply -auto-approve -var-file="dev_config.tfvars"

      - name: üåê Get EC2 Public IP
        id: get_ip
        run: |
          INSTANCE_IP=$(terraform output -raw instance_public_ip)
          echo "INSTANCE_IP=$INSTANCE_IP" >> $GITHUB_ENV
          echo "EC2 IP is: $INSTANCE_IP"

      - name: ‚è≥ Wait for EC2 to Start (SSH readiness)
        run: |
          echo "Waiting for EC2 instance to become reachable..."
          for i in {1..15}; do
            if nc -zv $INSTANCE_IP 22 2>/dev/null; then
              echo "‚úÖ EC2 is up and reachable via SSH!"
              exit 0
            else
              echo "‚è≥ Retrying SSH (attempt $i)..."
              sleep 10
            fi
          done
          echo "‚ùå EC2 instance not reachable on port 22"
          exit 1

      - name: üêß SSH into EC2 and Show App Logs
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.INSTANCE_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            echo "‚úÖ Connected to EC2. Checking app directory and logs..."
            if [ -d "/home/ubuntu/techeazy-devops" ]; then
              ls -lah /home/ubuntu/techeazy-devops
              if [ -f "/home/ubuntu/techeazy-devops/app.log" ]; then
                echo "üìÑ Showing app.log:"
                tail -n 30 /home/ubuntu/techeazy-devops/app.log
              else
                echo "‚ö†Ô∏è app.log not found!"
              fi
            else
              echo "‚ùå /home/ubuntu/techeazy-devops not found. App might not have cloned/deployed properly."
            fi

      - name: üîç Validate Application on Port 80
        run: |
          echo "üåê Validating app at http://${INSTANCE_IP} ..."
          for i in {1..10}; do
            status=$(curl -s -o /dev/null -w "%{http_code}" http://${INSTANCE_IP})
            echo "Attempt $i: HTTP status = $status"
            if [ "$status" == "200" ]; then
              echo "‚úÖ App is healthy and serving traffic!"
              exit 0
            fi
            echo "‚è≥ Waiting 10 seconds before retry..."
            sleep 10
          done
          echo "‚ùå App failed health check on port 80"
          exit 1
