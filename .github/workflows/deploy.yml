name: Deploy Java App to EC2

on:
  push:
    branches:
      - feature/devops-assignment-3
    tags:
      - 'v*'

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ap-south-1
      TF_VAR_aws_region: ap-south-1
      TF_VAR_logs_bucket_name: techeazy-dev-logs-debasish-87
      TF_VAR_project_name: techeazy-devops
      TF_VAR_environment: dev
      STAGE: dev

    steps:
      - name: ‚è¨ Checkout Code
        uses: actions/checkout@v3

      - name: üîê Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: ‚öôÔ∏è Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: üöÄ Terraform Init
        run: terraform init

      - name: üì¶ Terraform Plan
        run: terraform plan -var-file="dev_config.tfvars"

      - name: ‚úÖ Terraform Apply
        run: terraform apply -auto-approve -var-file="dev_config.tfvars"

      - name: üåê Get EC2 Public IP
        id: instance
        run: |
          echo "INSTANCE_IP=$(terraform output -raw instance_public_ip)" >> $GITHUB_ENV
          echo "EC2 Public IP: $INSTANCE_IP"

      - name: üåê Validate App on Port 80
        run: |
          echo "üåê Validating app at http://${INSTANCE_IP} ..."
          for i in {1..20}; do
            STATUS=$(curl -o /dev/null -s -w "%{http_code}\n" http://${INSTANCE_IP})
            if [[ "$STATUS" == "200" ]]; then
              echo "‚úÖ App is healthy and returned HTTP 200 OK"
              exit 0
            else
              echo "‚è≥ Waiting for app... (attempt $i), got status: $STATUS"
              sleep 10
            fi
          done
          echo "‚ùå App failed health check after 20 attempts"
          exit 1
