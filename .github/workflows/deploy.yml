name: Terraform Deployment

on:
  push:
    branches:
      - feature/devops-assignment-3  
    tags:
      - 'v*'

jobs:
  terraform:
    name: Clean Existing Resources & Apply Terraform
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ap-south-1

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Get AWS Account ID
        id: account
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query "Account" --output text)
          echo "account_id=$ACCOUNT_ID" >> $GITHUB_OUTPUT

      - name: Manual Cleanup of Conflicting Resources
        run: |
          aws iam delete-role-policy --role-name dev_s3_read_role --policy-name dev_s3_read_policy || true
          aws iam delete-role-policy --role-name dev_s3_write_role --policy-name dev_s3_write_policy || true
          aws iam delete-role --role-name dev_s3_read_role || true
          aws iam delete-role --role-name dev_s3_write_role || true
          aws iam delete-policy --policy-arn arn:aws:iam::${{ steps.account.outputs.account_id }}:policy/dev_s3_read_policy || true
          aws iam delete-policy --policy-arn arn:aws:iam::${{ steps.account.outputs.account_id }}:policy/dev_s3_write_policy || true
          aws s3 rb s3://techeazy-dev-logs-debasish-87 --force || true

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve -var-file="dev_config.tfvars"
